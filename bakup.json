{
  "canisters": {
    "challenge_backend": {
      "main": "src/challenge_backend/main.mo",
      "type": "motoko",
      "dependencies": [
        "cycle-ledger"
      ]
    },
    "challenge_frontend": {
      "dependencies": [
        "challenge_backend"
      ],
      "frontend": {
        "entrypoint": "src/challenge_frontend/src/index.html"
      },
      "source": [
        "src/challenge_frontend/assets",
        "dist/challenge_frontend/"
      ],
      "type": "assets"
    },
    "cycle-ledger": {
      "type": "pull",
      "id": "um5iw-rqaaa-aaaaq-qaaba-cai"
    }
  },
  "defaults": {
    "build": {
      "args": "",
      "packtool": ""
    }
  },
  "output_env_file": ".env",
  "version": 1
}
dfx identity use minter
export MINTER=$(dfx identity get-principal)
dfx identity use default
export DEFAULT=$(dfx identity get-principal)
dfx canister call cycle-ledger account_balance '(record { account = '$(python3 -c 'print("vec{" + ";".join([str(b) for b in bytes.fromhex("'$(dfx ledger --identity default account-id)'")]) + "}")')'})'
dfx canister call icp-ledger account_balance '(record { account = '$(python3 -c 'print("vec{" + ";".join([str(b) for b in bytes.fromhex("'$(dfx ledger --identity default account-id)'")]) + "}")')'})'

dfx canister call icp-ledger icrc2_approve '          
  record {
    amount = 100_010_000;
    spender = record {
      owner = principal "br5f7-7uaaa-aaaaa-qaaca-cai";
    };
  }
'

dfx canister call challenge_backend deposits '(10000,"bkyz2-fmaaa-aaaaa-qaaaq-cai")'
dfx canister call challenge_backend deposits '(10000,"be2us-64aaa-aaaaa-qaabq-cai")'

dfx canister call challenge_backend withdrawals '(5,"bkyz2-fmaaa-aaaaa-qaaaq-cai")'
dfx canister call challenge_backend withdrawals '(5,"be2us-64aaa-aaaaa-qaabq-cai")'

dfx deploy cycle-ledger --argument "(variant {
    Init = record {
      minting_account = \"$(dfx ledger --identity anonymous account-id)\";
      initial_values = vec {
        record {
          \"$(dfx ledger --identity default account-id)\";
          record {
            e8s = 10_000_000_000 : nat64;
          };
        };
      };
      send_whitelist = vec {};
      transfer_fee = opt record {
        e8s = 10_000 : nat64;
      };
      token_symbol = opt \"cys\";
      token_name = opt \"cycles\";
    }
  })
"

dfx deploy icp-ledger --argument "(variant {
    Init = record {
      minting_account = \"$(dfx ledger --identity anonymous account-id)\";
      initial_values = vec {
        record {
          \"$(dfx ledger --identity default account-id)\";
          record {
            e8s = 10_000_000_000 : nat64;
          };
        };
      };
      send_whitelist = vec {};
      transfer_fee = opt record {
        e8s = 10_000 : nat64;
      };
      token_symbol = opt \"icp\";
      token_name = opt \"icp\";
    }
  })
"

"cycle-ledger": {
    "type": "custom",
    "candid": "https://raw.githubusercontent.com/dfinity/ic/d87954601e4b22972899e9957e800406a0a6b929/rs/rosetta-api/icrc1/ledger/ledger.did",
    "wasm": "https://download.dfinity.systems/ic/d87954601e4b22972899e9957e800406a0a6b929/canisters/ic-icrc1-ledger.wasm.gz"
  },
  "icp-ledger": {
    "type": "custom",
    "candid": "https://raw.githubusercontent.com/dfinity/ic/d87954601e4b22972899e9957e800406a0a6b929/rs/rosetta-api/icrc1/ledger/ledger.did",
    "wasm": "https://download.dfinity.systems/ic/d87954601e4b22972899e9957e800406a0a6b929/canisters/ic-icrc1-ledger.wasm.gz"
  }